FindMaximum {
.field private test_arr.array.i32;
	.construct FindMaximum().V {
		invokespecial(this, "<init>").V;
	}
	.method public find_maximum(arr.array.i32).i32{
		i.i32 :=.i32 1.i32;
		t1.i32 :=.i32 0.i32;
		t2.i32 :=.i32 $1.arr[t1.i32].i32;
		maximum.i32 :=.i32 		t2.i32;
		Loop0:

t4.i32 :=.i32  arraylength(arr.array.i32).i32;t5.bool :=.bool i.i32  <.bool t4.i32;
			if (t5.bool ==.bool t5.bool) goto Body0;
			goto EndLoop0;
		Body0:
			t6.i32 :=.i32 $1.arr[i.i32].i32;
		value.i32 :=.i32 		t6.i32;
	
t7.bool :=.bool maximum.i32  <.bool value.i32;
		if (t7.bool !.bool t7.bool) goto else1;
			maximum.i32 :=.i32 value.i32;
			goto endif1;
			else1:
		endif1:
			
		
		i.i32 :=.i32 i.i32 +.i32 1.i32;
			goto Loop0;
		EndLoop0:
		ret.i32 maximum.i32;
	}
	.method public build_test_arr().i32{
		test_arr.array.i32 :=.array.i32 new(array, 5.i32).array.i32;
		t11.i32 :=.i32 0.i32;
		t10.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;		
t10[t11.i32].i32 :=.i32 14.i32;
		t15.i32 :=.i32 1.i32;
		t14.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;		
t14[t15.i32].i32 :=.i32 28.i32;
		t19.i32 :=.i32 2.i32;
		t18.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;		
t18[t19.i32].i32 :=.i32 0.i32;
		
		
		t21.i32 :=.i32 3.i32;
		t20.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;		
t20[t21.i32].i32 :=.i32 0.i32 -.i32 5.i32;
		t25.i32 :=.i32 4.i32;
		t24.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;		
t24[t25.i32].i32 :=.i32 12.i32;
		ret.i32 0.i32;
	}
	.method public get_array().array.i32{
		t26.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;		ret.array.i32 t26.array.i32;
	}

	.method public static main(args.array.String).V {
		fm.FindMaximum :=.FindMaximum new(FindMaximum).FindMaximum;
		invokespecial(fm.FindMaximum, "<init>").V;
invokevirtual(fm.FindMaximum, "build_test_arr").i32;		t27.array.i32 :=.array.i32 invokevirtual(fm.FindMaximum, "get_array").array.i32;		max.i32 :=.i32 invokevirtual(fm.FindMaximum, "find_maximum", t27.array.i32).i32;
		invokestatic(ioPlus, "printResult", max.i32).V;		ret.V;
	}
}